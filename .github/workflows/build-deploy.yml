on:
  push:
    branches: [ main ]
    paths: .github/workflows/4-actions-ci-cd-aks-tf-backend-jobs.yml
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build-images:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./infrastructure
    env:
      DOCKER_REPOSITORY: sayaligbe 
      FRONTEND_IMAGE_NAME: sca-frontend
      BACKEND_IMAGE_NAME: sca-backend
      IMAGE_TAG: ${{ github.run_number }} # $GITHUB_RUN_NUMBER
      SUB_ID: ${{ secrets.SUB_ID }}
      SSH: ${{ secrets.SSH }}

    steps:

    - name: Add mask to hide secrets 
      run: |
        echo "::add-mask::$SUB_ID"
        echo "::add-mask::$SSH"

    - name: Git Checkout
      uses: actions/checkout@v2

    - name: Build Docker images
      run: |
        docker build ../source-code/client --file ../source-code/client/Dockerfile  --tag $DOCKER_REPOSITORY/$FRONTEND_IMAGE_NAME:$IMAGE_NUMBER --no-cache
        docker build ../source-code/client --file ../source-code/client/Dockerfile  --tag $DOCKER_REPOSITORY/$BACKEND_IMAGE_NAME:$IMAGE_NUMBER --no-cache

    - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Image to Docker Hub
      run: |
        docker push $DOCKER_REPOSITORY/$FRONTEND_IMAGE_NAME:$IMAGE_NUMBER
        docker push $DOCKER_REPOSITORY/$BACKEND_IMAGE_NAME:$IMAGE_NUMBER

    - name: Update the docker images in the kubernetes manifests
      run: |
        sed -i '/^frontendImg:.*/ s//frontendImg:$DOCKER_REPOSITORY\/$FRONTEND_IMAGE_NAME:$IMAGE_NUMBER/' infrastructure-addons/group_vars/all/vars.yml
        sed -i '/^backendImg:.*/ s//backendImg:$DOCKER_REPOSITORY\/$BACKEND_IMAGE_NAME:$IMAGE_NUMBER/' infrastructure-addons/group_vars/all/vars.yml
  
#provision infrastructure
        
    - name: Setup Terraform with specified version on the runner
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.0

#Set up the backend
    - name: Terraform init ../terraform-backend
      id: init-backend
      run: |
        cd ../terraform-backend
        terraform init

    - name: Terraform plan ../terraform-backend
      id: plan-backend
      run: |
        cd ../terraform-backend
        terraform plan -input=false

    - name: Terraform apply ../terraform-backend
      id: apply-backend
      run: |
        cd ../terraform-backend
        terraform apply -auto-approve -input=false

#Provision infrastructure

    - name: Terraform init
      id: init
      run: terraform init 
        
    - name: Terraform plan
      id: plan
      run: terraform plan -var="ssh_public_key=${{ secrets.SSH }}" -input=false
      
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
      
    - name: Terraform apply
      id: apply
      run: terraform apply -var="ssh_public_key=${{ secrets.SSH }}" -auto-approve -input=false

#deploy workload

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies Including Ansible
      run: |
        apt update
        apt install software-properties-common
        add-apt-repository --yes --update ppa:ansible/ansible
        apt install ansible

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_KEY }}
        name: id_rsa
        known_hosts: unnecessary
        if_key_exists: fail

    - name: run playbook
        run: |
          echo '${{ secrets.VAULT_PASSWORD }}' | ansible-playbook main.yml --vault-pass-file=/bin/cat 